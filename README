Population De Novo Assembly and Variant Calling
===============================================

Multi-sample de novo assembly and variant calling using de bruijn graphs.
Variant calling with and without a reference genome. Between closely related
samples or highly diverged ones. From bacterial to mammalian genomes. Minimal
configuration. And it's free.

Isaac Turner's experimental fork of cortex_var, to handle larger populations
with better genome assembly.

04 July 2013

Build
-----

Compiles with clang and gcc. Tested on Mac OS X and linux. Requires zlib.
The first compile will take a while since the libraries in libs/ need to be
downloaded and compiled.

    cd libs; make; cd ..

To compile for a maximum kmer size of 31:

    make

to compile for a maximum kmer size of 63:

    make MAXK=63

Commands
--------

ctx_build     [FASTA/FASTQ/BAM -> binary file]
ctx_thread    [thread reads through cleaned population]
ctp_view      [view read threading information]
ctx_call      [call variants]
ctx_unique    [remove duplicated bubbles -> VCF]
ctx_covg      [add covg to a VCF file]
ctx_place     [place variants and genotype]
ctx_subgraph  [filter a subgraph]
ctx_reads     [filter reads using a graph]
ctx_intersect [dump intersection of a.ctx with b.ctx]
ctx_join      [combine binaries]
ctx_extend    [extend contigs using a population graph]
ctx_contigs   [pull out contigs from a sample]

Common Pipelines
----------------

Example pipelines -here- shortly:
1. One high depth sample
2. Multiple low depth samples

Getting Helps
-------------

Isaac Turner: turner.isaac@gmail.com

Code And Contributing
------------

Issues can be submitted on github. Pull requests welcome. Please add your name
to the AUTHORS file.

Code is organised as:
* libs/       included library code from other projects
* src/common  files that need recompiling based on different max kmer size (MAXK)
* src/basic   files that do not depend on MAXK
* src/tools   one file for each tool - handles command line arguments etc.

License: GPLv2
--------------

Bundled libraries may have different licenses:
* GNU Science Library (GPL)
* seqan (BSD/3-clause)
* city_hash (MIT)
* lookup3 (Public Domain)
* htslib
* seq_file (BSD)
* string_buffer (BSD)
* bit_array (BSD)
* seq-align (GPLv3)

Used in testing:
* bioinf-perl
* cortex_binary_reader

Citing
------

'Cortex with low memory and read threading' is currently unpublished.  Please
cite previous cortex_var papers:

* De novo assembly and genotyping of variants using colored de Bruijn graphs,
Iqbal(*), Caccamo(*), Turner, Flicek, McVean (Nature Genetics) (2012)
(doi:10.1038/ng.1028)
* High-throughput microbial population genomics using the Cortex variation assembler,
Iqbal, Turner, McVean (Bioinformatics) (Nov 2012)
(doi:10.1093/bioinformatics/bts673)
